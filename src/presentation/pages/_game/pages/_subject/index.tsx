import { faker } from '@faker-js/faker';
import { FC, Fragment, ReactNode, useEffect, useMemo, useRef } from 'react';

import {
  BakingPaper,
  Button,
  Icon,
  IconButton,
  Input,
  Popover,
  Ripple,
} from '@presentation/components';
import {
  useGame,
  useNavigate,
  usePlayer,
  useStates,
  useSubject,
  useToast,
} from '@presentation/hooks';

import { useTipToast } from './hooks';

import { ColorSelector } from '../../components';

import { SubjectExistsProxy } from './proxies';

import {
  Buttons,
  Content,
  IconOption,
  IconSelector,
  PopoverContent,
  PopoverSection,
  PopoverSectionTitle,
} from './styles';

const emojis = {
  'Smileys & Pessoas': [
    '😀',
    '😃',
    '😄',
    '😁',
    '😆',
    '😅',
    '😂',
    '🤣',
    '😊',
    '😇',
    '🙂',
    '🙃',
    '😉',
    '😌',
    '😍',
    '🥰',
    '😘',
    '😗',
    '😙',
    '😚',
    '😋',
    '😛',
    '😜',
    '🤪',
    '😝',
    '🤑',
    '🤗',
    '🤭',
    '🤫',
    '🤔',
    '🤐',
    '🤨',
    '😐',
    '😑',
    '😶',
    '😏',
    '😒',
    '🙄',
    '😬',
    '🤥',
    '😔',
    '😪',
    '🤤',
    '😴',
    '😷',
    '🤒',
    '🤕',
    '🤢',
    '🤮',
    '🤧',
    '😵',
    '🤯',
    '🤠',
    '🥳',
    '😎',
    '🤓',
    '🧐',
    '😕',
    '😟',
    '🙁',
    '☹️',
    '😮',
    '😯',
    '😲',
    '😳',
    '🥺',
    '😦',
    '😧',
    '😨',
    '😰',
    '😥',
    '😢',
    '😭',
    '😱',
    '😖',
    '😣',
    '😞',
    '😓',
    '😩',
    '😫',
    '🥱',
    '😤',
    '😡',
    '😠',
    '🤬',
    '😈',
    '👿',
    '💀',
    '☠️',
    '💩',
    '🤡',
    '👹',
    '👺',
    '👻',
    '👽',
    '👾',
    '🤖',
    '😺',
    '😸',
    '😹',
    '😻',
    '😼',
    '😽',
    '🙀',
    '😿',
    '😾',
    '🙈',
    '🙉',
    '🙊',
    '💋',
    '👋',
    '🤚',
    '🖐️',
    '✋',
    '🖖',
    '👌',
    '🤌',
    '🤏',
    '✌️',
    '🤞',
    '🤟',
    '🤘',
    '🤙',
    '👈',
    '👉',
    '👆',
    '🖕',
    '👇',
    '☝️',
    '👍',
    '👎',
    '✊',
    '👊',
    '🤛',
    '🤜',
    '👏',
    '🙌',
    '👐',
    '🤲',
    '🤝',
    '🙏',
    '✍️',
    '💅',
    '🤳',
    '💪',
    '🦾',
    '🦵',
    '🦿',
    '🦶',
    '👂',
    '🦻',
    '👃',
    '🧠',
    '🦷',
    '🦴',
    '👀',
    '👁️',
    '👅',
    '👄',
    '🫦',
    '🧑',
    '👶',
    '🧒',
    '👦',
    '👧',
    '🧑‍🦱',
    '👨‍🦱',
    '👩‍🦱',
    '🧑‍🦰',
    '👨‍🦰',
    '👩‍🦰',
    '🧑‍🦳',
    '👨‍🦳',
    '👩‍🦳',
    '🧑‍🦲',
    '👨‍🦲',
    '👩‍🦲',
    '🧔',
    '👱',
    '👱‍♂️',
    '👱‍♀️',
    '👨',
    '👩',
    '🧓',
    '👴',
    '👵',
    '🙍',
    '🙍‍♂️',
    '🙍‍♀️',
    '🙎',
    '🙎‍♂️',
    '🙎‍♀️',
    '🙅',
    '🙅‍♂️',
    '🙅‍♀️',
    '🙆',
    '🙆‍♂️',
    '🙆‍♀️',
    '💁',
    '💁‍♂️',
    '💁‍♀️',
    '🙋',
    '🙋‍♂️',
    '🙋‍♀️',
    '🧏',
    '🧏‍♂️',
    '🧏‍♀️',
    '🙇',
    '🙇‍♂️',
    '🙇‍♀️',
    '🤦',
    '🤦‍♂️',
    '🤦‍♀️',
    '🤷',
    '🤷‍♂️',
    '🤷‍♀️',
    '🧑‍⚕️',
    '👨‍⚕️',
    '👩‍⚕️',
    '🧑‍🎓',
    '👨‍🎓',
    '👩‍🎓',
    '🧑‍🏫',
    '👨‍🏫',
    '👩‍🏫',
    '🧑‍⚖️',
    '👨‍⚖️',
    '👩‍⚖️',
    '🧑‍🌾',
    '👨‍🌾',
    '👩‍🌾',
    '🧑‍🍳',
    '👨‍🍳',
    '👩‍🍳',
    '🧑‍🔧',
    '👨‍🔧',
    '👩‍🔧',
    '🧑‍🏭',
    '👨‍🏭',
    '👩‍🏭',
    '🧑‍💼',
    '👨‍💼',
    '👩‍💼',
    '🧑‍🔬',
    '👨‍🔬',
    '👩‍🔬',
    '🧑‍💻',
    '👨‍💻',
    '👩‍💻',
    '🧑‍🎤',
    '👨‍🎤',
    '👩‍🎤',
    '🧑‍🎨',
    '👨‍🎨',
    '👩‍🎨',
    '🧑‍✈️',
    '👨‍✈️',
    '👩‍✈️',
    '🧑‍🚀',
    '👨‍🚀',
    '👩‍🚀',
    '🧑‍🚒',
    '👨‍🚒',
    '👩‍🚒',
    '👮',
    '👮‍♂️',
    '👮‍♀️',
    '🕵️',
    '🕵️‍♂️',
    '🕵️‍♀️',
    '💂',
    '💂‍♂️',
    '💂‍♀️',
    '👷',
    '👷‍♂️',
    '👷‍♀️',
    '🤴',
    '👸',
    '👳',
    '👳‍♂️',
    '👳‍♀️',
    '👲',
    '🧕',
    '🤵',
    '🤵‍♂️',
    '🤵‍♀️',
    '👰',
    '👰‍♂️',
    '👰‍♀️',
    '🤰',
    '🤱',
    '👩‍🍼',
    '👨‍🍼',
    '🧑‍🍼',
    '👼',
    '🎅',
    '🤶',
    '🧑‍🎄',
    '🦸',
    '🦸‍♂️',
    '🦸‍♀️',
    '🦹',
    '🦹‍♂️',
    '🦹‍♀️',
    '🧙',
    '🧙‍♂️',
    '🧙‍♀️',
    '🧚',
    '🧚‍♂️',
    '🧚‍♀️',
    '🧛',
    '🧛‍♂️',
    '🧛‍♀️',
    '🧜',
    '🧜‍♂️',
    '🧜‍♀️',
    '🧝',
    '🧝‍♂️',
    '🧝‍♀️',
    '🧞',
    '🧞‍♂️',
    '🧞‍♀️',
    '🧟',
    '🧟‍♂️',
    '🧟‍♀️',
    '🧌',
    '🕴️',
    '💃',
    '🕺',
    '👯',
    '👯‍♂️',
    '👯‍♀️',
    '🧖',
    '🧖‍♂️',
    '🧖‍♀️',
    '🧗',
    '🧗‍♂️',
    '🧗‍♀️',
    '🤺',
    '🏇',
    '⛷️',
    '🏂',
    '🏌️',
    '🏌️‍♂️',
    '🏌️‍♀️',
    '🏄',
    '🏄‍♂️',
    '🏄‍♀️',
    '🚣',
    '🚣‍♂️',
    '🚣‍♀️',
    '🏊',
    '🏊‍♂️',
    '🏊‍♀️',
    '⛹️',
    '⛹️‍♂️',
    '⛹️‍♀️',
    '🏋️',
    '🏋️‍♂️',
    '🏋️‍♀️',
    '🚴',
    '🚴‍♂️',
    '🚴‍♀️',
    '🚵',
    '🚵‍♂️',
    '🚵‍♀️',
    '🤸',
    '🤸‍♂️',
    '🤸‍♀️',
    '🤼',
    '🤼‍♂️',
    '🤼‍♀️',
    '🤽',
    '🤽‍♂️',
    '🤽‍♀️',
    '🤾',
    '🤾‍♂️',
    '🤾‍♀️',
    '🤹',
    '🤹‍♂️',
    '🤹‍♀️',
    '🧘',
    '🧘‍♂️',
    '🧘‍♀️',
    '🛀',
    '🛌',
    '🧑‍🤝‍🧑',
    '👭',
    '👫',
    '👬',
    '💏',
    '👩‍❤️‍💋‍👨',
    '👨‍❤️‍💋‍👨',
    '👩‍❤️‍💋‍👩',
    '💑',
    '👩‍❤️‍👨',
    '👨‍❤️‍👨',
    '👩‍❤️‍👩',
    '👪',
    '👨‍👩‍👦',
    '👨‍👩‍👧',
    '👨‍👩‍👧‍👦',
    '👨‍👩‍👦‍👦',
    '👨‍👩‍👧‍👧',
    '👨‍👨‍👦',
    '👨‍👨‍👧',
    '👨‍👨‍👧‍👦',
    '👨‍👨‍👦‍👦',
    '👨‍👨‍👧‍👧',
    '👩‍👩‍👦',
    '👩‍👩‍👧',
    '👩‍👩‍👧‍👦',
    '👩‍👩‍👦‍👦',
    '👩‍👩‍👧‍👧',
    '👤',
    '👥',
    '🫂',
    '👣',
  ],
  'Animais & Natureza': [
    '🐵',
    '🐒',
    '🦍',
    '🦧',
    '🐶',
    '🐕',
    '🦮',
    '🐕‍🦺',
    '🐩',
    '🐺',
    '🦊',
    '🦝',
    '🐱',
    '🐈',
    '🦁',
    '🐯',
    '🐅',
    '🐆',
    '🐴',
    '🐎',
    '🦄',
    '🫏',
    '🦓',
    '🦌',
    '🫎',
    '🦬',
    '🐮',
    '🐂',
    '🐃',
    '🐄',
    '🐷',
    '🐖',
    '🐗',
    '🐽',
    '🐏',
    '🐑',
    '🐐',
    '🐪',
    '🐫',
    '🦙',
    '🦒',
    '🐘',
    '🦣',
    '🦏',
    '🦛',
    '🐭',
    '🐁',
    '🐀',
    '🐹',
    '🐰',
    '🐇',
    '🐿️',
    '🦫',
    '🦔',
    '🦇',
    '🐻',
    '🐻‍❄️',
    '🐨',
    '🐼',
    '🦥',
    '🦦',
    '🦨',
    '🦘',
    '🦡',
    '🦃',
    '🐔',
    '🐓',
    '🐣',
    '🐤',
    '🐥',
    '🐦',
    '🐧',
    '🕊️',
    '🦅',
    '🦆',
    '🦢',
    '🦉',
    '🦤',
    '🪶',
    '🦩',
    '🦚',
    '🦜',
    '🐸',
    '🐊',
    '🐢',
    '🦎',
    '🐍',
    '🐲',
    '🐉',
    '🦕',
    '🦖',
    '🐳',
    '🐋',
    '🦈',
    '🐬',
    '🐟',
    '🐠',
    '🐡',
    '🦭',
    '🐙',
    '🦑',
    '🦐',
    '🦞',
    '🦀',
    '🐚',
    '🪸',
    '🐌',
    '🦋',
    '🐛',
    '🐜',
    '🐝',
    '🪲',
    '🐞',
    '🦗',
    '🪳',
    '🦟',
    '🦠',
    '🪱',
    '🪰',
    '🪴',
    '💐',
    '🌸',
    '💮',
    '🪷',
    '🏵️',
    '🌹',
    '🥀',
    '🌺',
    '🌻',
    '🌼',
    '🌷',
    '🌱',
    '🪹',
    '🪺',
    '🌲',
    '🌳',
    '🌴',
    '🪵',
    '🌵',
    '🌾',
    '🌿',
    '☘️',
    '🍀',
    '🍁',
    '🍂',
    '🍃',
    '🌰',
  ],
  'Comida & Bebida': [
    '🍇',
    '🍈',
    '🍉',
    '🍊',
    '🍋',
    '🍌',
    '🍍',
    '🥭',
    '🍎',
    '🍏',
    '🍐',
    '🍑',
    '🍒',
    '🍓',
    '🫐',
    '🥝',
    '🍅',
    '🫒',
    '🥥',
    '🥑',
    '🍆',
    '🥔',
    '🥕',
    '🌽',
    '🌶️',
    '🫑',
    '🥒',
    '🥬',
    '🥦',
    '🧄',
    '🧅',
    '🍄',
    '🥜',
    '🫘',
    '🌰',
    '🍞',
    '🥐',
    '🥖',
    '🫓',
    '🥨',
    '🥯',
    '🥞',
    '🧇',
    '🧀',
    '🍖',
    '🍗',
    '🥩',
    '🥓',
    '🍔',
    '🍟',
    '🍕',
    '🌭',
    '🥪',
    '🌮',
    '🌯',
    '🫔',
    '🥙',
    '🧆',
    '🥚',
    '🍳',
    '🥘',
    '🍲',
    '🫕',
    '🥣',
    '🥗',
    '🍿',
    '🧈',
    '🧂',
    '🥫',
    '🍱',
    '🍘',
    '🍙',
    '🍚',
    '🍛',
    '🍜',
    '🍝',
    '🍠',
    '🍢',
    '🍣',
    '🍤',
    '🍥',
    '🥮',
    '🍡',
    '🥟',
    '🥠',
    '🥡',
    '🦪',
    '🍦',
    '🍧',
    '🍨',
    '🍩',
    '🍪',
    '🎂',
    '🍰',
    '🧁',
    '🥧',
    '🍫',
    '🍬',
    '🍭',
    '🍮',
    '🍯',
    '🍼',
    '🥛',
    '☕',
    '🫖',
    '🍵',
    '🍶',
    '🍾',
    '🍷',
    '🍸',
    '🍹',
    '🍺',
    '🍻',
    '🥂',
    '🥃',
    '🫗',
    '🥤',
    '🧋',
    '🧃',
    '🧉',
    '🧊',
    '🥢',
    '🍽️',
    '🍴',
    '🥄',
  ],
  Atividades: [
    '⚽',
    '🏀',
    '🏈',
    '⚾',
    '🥎',
    '🎾',
    '🏐',
    '🏉',
    '🥏',
    '🎱',
    '🪀',
    '🏓',
    '🏸',
    '🏒',
    '🏑',
    '🥍',
    '🏏',
    '🪃',
    '🥅',
    '⛳',
    '🪁',
    '🛝',
    '🏹',
    '🎣',
    '🤿',
    '🥊',
    '🥋',
    '🎽',
    '🛹',
    '🛼',
    '🛷',
    '⛸️',
    '🥌',
    '🎿',
    '⛷️',
    '🏂',
    '🪂',
    '🏋️',
    '🏋️‍♀️',
    '🏋️‍♂️',
    '🤼',
    '🤼‍♀️',
    '🤼‍♂️',
    '🤸',
    '🤸‍♀️',
    '🤸‍♂️',
    '⛹️',
    '⛹️‍♀️',
    '⛹️‍♂️',
    '🤺',
    '🤾',
    '🤾‍♀️',
    '🤾‍♂️',
    '🏌️',
    '🏌️‍♀️',
    '🏌️‍♂️',
    '🏇',
    '🧘',
    '🧘‍♀️',
    '🧘‍♂️',
    '🏄',
    '🏄‍♀️',
    '🏄‍♂️',
    '🏊',
    '🏊‍♀️',
    '🏊‍♂️',
    '🤽',
    '🤽‍♀️',
    '🤽‍♂️',
    '🚣',
    '🚣‍♀️',
    '🚣‍♂️',
    '🧗',
    '🧗‍♀️',
    '🧗‍♂️',
    '🚵',
    '🚵‍♀️',
    '🚵‍♂️',
    '🚴',
    '🚴‍♀️',
    '🚴‍♂️',
    '🏆',
    '🥇',
    '🥈',
    '🥉',
    '🏅',
    '🎖️',
    '🏵️',
    '🎗️',
    '🎫',
    '🎟️',
    '🎪',
    '🤹',
    '🤹‍♀️',
    '🤹‍♂️',
    '🎭',
    '🩰',
    '🎨',
    '🎬',
    '🎤',
    '🎧',
    '🎼',
    '🎹',
    '🪇',
    '🥁',
    '🪘',
    '🎷',
    '🎺',
    '🪗',
    '🎸',
    '🪕',
    '🎻',
    '🪈',
    '🎲',
    '♟️',
    '🎯',
    '🎳',
    '🎮',
    '🎰',
    '🧩',
  ],
  'Viagens & Locais': [
    '🚗',
    '🚕',
    '🚙',
    '🛻',
    '🚐',
    '🚌',
    '🚎',
    '🏎️',
    '🚓',
    '🚑',
    '🚒',
    '🚚',
    '🚛',
    '🚜',
    '🦯',
    '🦽',
    '🦼',
    '🩼',
    '🛴',
    '🚲',
    '🛵',
    '🏍️',
    '🛺',
    '🛞',
    '🚨',
    '🚔',
    '🚍',
    '🚘',
    '🚖',
    '🚡',
    '🚠',
    '🚟',
    '🚃',
    '🚋',
    '🚞',
    '🚝',
    '🚄',
    '🚅',
    '🚈',
    '🚂',
    '🚆',
    '🚇',
    '🚊',
    '🚉',
    '✈️',
    '🛫',
    '🛬',
    '🛩️',
    '💺',
    '🛰️',
    '🚀',
    '🛸',
    '🚁',
    '🛶',
    '⛵',
    '🚤',
    '🛥️',
    '🛳️',
    '⛴️',
    '🚢',
    '🛟',
    '⚓',
    '🪝',
    '⛽',
    '🚧',
    '🚦',
    '🚥',
    '🚏',
    '🗺️',
    '🗿',
    '🗽',
    '🗼',
    '🏰',
    '🏯',
    '🏟️',
    '🎡',
    '🎢',
    '🎠',
    '⛲',
    '⛱️',
    '🏖️',
    '🏝️',
    '🏜️',
    '🌋',
    '⛰️',
    '🏔️',
    '🗻',
    '🏕️',
    '⛺',
    '🏠',
    '🏡',
    '🏘️',
    '🏚️',
    '🛖',
    '🏗️',
    '🏭',
    '🏢',
    '🏬',
    '🏣',
    '🏤',
    '🏥',
    '🏦',
    '🏨',
    '🏪',
    '🏫',
    '🏩',
    '💒',
    '🏛️',
    '⛪',
    '🕌',
    '🕍',
    '🛕',
    '🕋',
    '⛩️',
    '🛤️',
    '🛣️',
    '🗾',
    '🎑',
    '🏞️',
    '🌅',
    '🌄',
    '🌠',
    '🎆',
    '🎇',
    '🌇',
    '🌆',
    '🏙️',
    '🌃',
    '🌌',
    '🌉',
    '🌁',
  ],
  Objetos: [
    '⌚',
    '📱',
    '📲',
    '💻',
    '⌨️',
    '🖥️',
    '🖨️',
    '🖱️',
    '🖲️',
    '🕹️',
    '🗜️',
    '💽',
    '💾',
    '💿',
    '📀',
    '📼',
    '📷',
    '📸',
    '📹',
    '🎥',
    '📽️',
    '🎞️',
    '📞',
    '☎️',
    '📟',
    '📠',
    '📺',
    '📻',
    '🎙️',
    '🎚️',
    '🎛️',
    '🧭',
    '⏱️',
    '⏲️',
    '⏰',
    '🕰️',
    '⌛',
    '⏳',
    '📡',
    '🔋',
    '🪫',
    '🔌',
    '💡',
    '🔦',
    '🕯️',
    '🪔',
    '🧯',
    '🛢️',
    '💸',
    '💵',
    '💴',
    '💶',
    '💷',
    '🪙',
    '💰',
    '💳',
    '🪪',
    '💎',
    '⚖️',
    '🪜',
    '🧰',
    '🪛',
    '🔧',
    '🔨',
    '⚒️',
    '🛠️',
    '⛏️',
    '🪚',
    '🔩',
    '⚙️',
    '🪤',
    '🧱',
    '⛓️',
    '🧲',
    '🔫',
    '💣',
    '🧨',
    '🪓',
    '🔪',
    '🗡️',
    '⚔️',
    '🛡️',
    '🚬',
    '⚰️',
    '🪦',
    '⚱️',
    '🏺',
    '🔮',
    '📿',
    '🧿',
    '🪬',
    '💈',
    '⚗️',
    '🔭',
    '🔬',
    '🕳️',
    '🩻',
    '🩹',
    '🩺',
    '💊',
    '💉',
    '🩸',
    '🧬',
    '🦠',
    '🧫',
    '🧪',
    '🌡️',
    '🧹',
    '🪠',
    '🧺',
    '🧻',
    '🚽',
    '🚰',
    '🚿',
    '🛁',
    '🛀',
    '🧼',
    '🪥',
    '🪒',
    '🪮',
    '🧽',
    '🪣',
    '🧴',
    '🛎️',
    '🔑',
    '🗝️',
    '🚪',
    '🪑',
    '🛋️',
    '🛏️',
    '🛌',
    '🧸',
    '🪆',
    '🖼️',
    '🪞',
    '🪟',
    '🛍️',
    '🛒',
    '🎁',
    '🎈',
    '🎏',
    '🎀',
    '🪄',
    '🪅',
    '🎊',
    '🎉',
    '🎎',
    '🪭',
    '🏮',
    '🎐',
    '🪩',
    '🧧',
    '✉️',
    '📩',
    '📨',
    '📧',
    '💌',
    '📥',
    '📤',
    '📦',
    '🏷️',
    '🪧',
    '📪',
    '📫',
    '📬',
    '📭',
    '📮',
    '📯',
    '📜',
    '📃',
    '📄',
    '📑',
    '🧾',
    '📊',
    '📈',
    '📉',
    '🗒️',
    '🗓️',
    '📆',
    '📅',
    '🗑️',
    '📇',
    '🗃️',
    '🗳️',
    '🗄️',
    '📋',
    '📁',
    '📂',
    '🗂️',
    '🗞️',
    '📰',
    '📓',
    '📔',
    '📒',
    '📕',
    '📗',
    '📘',
    '📙',
    '📚',
    '📖',
    '🔖',
    '🧷',
    '🔗',
    '📎',
    '🖇️',
    '📐',
    '📏',
    '🧮',
    '📌',
    '📍',
    '✂️',
    '🖊️',
    '🖋️',
    '✒️',
    '🖌️',
    '🖍️',
    '📝',
    '✏️',
    '🔍',
    '🔎',
    '🔏',
    '🔐',
    '🔒',
    '🔓',
  ],
  Símbolos: [
    '🩷',
    '❤️',
    '🧡',
    '💛',
    '💚',
    '🩵',
    '💙',
    '💜',
    '🖤',
    '🩶',
    '🤍',
    '🤎',
    '💔',
    '❣️',
    '💕',
    '💞',
    '💓',
    '💗',
    '💖',
    '💘',
    '💝',
    '❤️‍🩹',
    '❤️‍🔥',
    '💟',
    '☮️',
    '✝️',
    '☪️',
    '🕉️',
    '☸️',
    '🪯',
    '✡️',
    '🔯',
    '🕎',
    '☯️',
    '☦️',
    '🛐',
    '⛎',
    '♈',
    '♉',
    '♊',
    '♋',
    '♌',
    '♍',
    '♎',
    '♏',
    '♐',
    '♑',
    '♒',
    '♓',
    '🆔',
    '⚛️',
    '🉑',
    '☢️',
    '☣️',
    '📴',
    '📳',
    '🈶',
    '🈚',
    '🈸',
    '🈺',
    '🈷️',
    '✴️',
    '🆚',
    '💮',
    '🉐',
    '㊙️',
    '㊗️',
    '🈴',
    '🈵',
    '🈹',
    '🈲',
    '🅰️',
    '🅱️',
    '🆎',
    '🆑',
    '🅾️',
    '🆘',
    '❌',
    '⭕',
    '🛑',
    '⛔',
    '📛',
    '🚫',
    '💯',
    '💢',
    '♨️',
    '🚷',
    '🚯',
    '🚳',
    '🚱',
    '🔞',
    '📵',
    '🚭',
    '❗',
    '❕',
    '❓',
    '❔',
    '‼️',
    '⁉️',
    '🔅',
    '🔆',
    '〽️',
    '⚠️',
    '🚸',
    '🔱',
    '⚜️',
    '🔰',
    '♻️',
    '✅',
    '🈯',
    '💹',
    '❇️',
    '✳️',
    '❎',
    '🌐',
    '💠',
    'Ⓜ️',
    '🌀',
    '💤',
    '🏧',
    '🚾',
    '♿',
    '🅿️',
    '🛗',
    '🈳',
    '🈂️',
    '🛂',
    '🛃',
    '🛄',
    '🛅',
    '🛜',
    '🚹',
    '🚺',
    '🚼',
    '🚻',
    '🚮',
    '🎦',
    '📶',
    '🈁',
    '🔣',
    'ℹ️',
    '🔤',
    '🔡',
    '🔠',
    '🆖',
    '🆗',
    '🆙',
    '🆒',
    '🆕',
    '🆓',
    '0️⃣',
    '1️⃣',
    '2️⃣',
    '3️⃣',
    '4️⃣',
    '5️⃣',
    '6️⃣',
    '7️⃣',
    '8️⃣',
    '9️⃣',
    '🔟',
    '🔢',
    '#️⃣',
    '*️⃣',
    '⏏️',
    '▶️',
    '⏸️',
    '⏯️',
    '⏹️',
    '⏺️',
    '⏭️',
    '⏮️',
    '⏩',
    '⏪',
    '⏫',
    '⏬',
    '◀️',
    '🔼',
    '🔽',
    '➡️',
    '⬅️',
    '⬆️',
    '⬇️',
    '↗️',
    '↘️',
    '↙️',
    '↖️',
    '↕️',
    '↔️',
    '↪️',
    '↩️',
    '⤴️',
    '⤵️',
    '🔀',
    '🔁',
    '🔂',
    '🔃',
    '🔄',
    '🎵',
    '🎶',
    '',
    '➕',
    '➖',
    '➗',
    '✖️',
    '🟰',
    '♾️',
    '💲',
    '💱',
    '™️',
    '©️',
    '®️',
    '〰️',
    '➰',
    '➿',
    '🔚',
    '🔙',
    '🔛',
    '🔝',
    '🔜',
    '✔️',
    '☑️',
    '🔘',
    '⚪',
    '⚫',
    '🔴',
    '🔵',
    '🟤',
    '🟣',
    '🟢',
    '🟡',
    '🟠',
    '🔺',
    '🔻',
    '🔸',
    '🔹',
    '🔶',
    '🔷',
    '🔳',
    '🔲',
    '▪️',
    '▫️',
    '◾',
    '◽',
    '◼️',
    '◻️',
    '⬛',
    '⬜',
    '🟧',
    '🟦',
    '🟥',
    '🟫',
    '🟪',
    '🟩',
    '🟨',
    '🔈',
    '🔇',
    '🔉',
    '🔊',
    '🔔',
    '🔕',
    '📣',
    '📢',
    '🗨️',
    '👁️‍🗨️',
    '💬',
    '💭',
    '🗯️',
    '♠️',
    '♣️',
    '♥️',
    '♦️',
    '🃏',
    '🎴',
    '🀄',
    '🕐',
    '🕑',
    '🕒',
    '🕓',
    '🕔',
    '🕕',
    '🕖',
    '🕗',
    '🕘',
    '🕙',
    '🕚',
    '🕛',
    '🕜',
    '🕝',
    '🕞',
    '🕟',
    '🕠',
    '🕡',
    '🕢',
    '🕣',
    '🕤',
    '🕥',
    '🕦',
    '🕧',
    '0️',
    '1️',
    '2️',
    '3️',
    '4️',
    '5️',
    '6️',
    '7️',
    '8️',
    '9️',
    '#️',
    '*️',
    '♀️',
    '♂️',
    '⚧',
    '⚕️',
  ],
};

const SubjectPage: FC<SubjectExistsProxy.ChildrenProps> = ({ subject }) => {
  const newSubject = !subject;

  const { navigateToGame } = useNavigate();

  const { mySubject, createMySubject, createLightSpotSubject, editSubject } =
    useSubject();
  const { players, myPlayer, isMyTurn, isMyLightSpotTurn } = usePlayer();
  const { currentGame } = useGame();

  const [state, subState] = currentGame?.state ?? [];

  const author = useMemo(
    () => players.find(({ id }) => id === subject?.authorID),
    [players, subject?.authorID],
  );

  const firstNewSubjectColor = !myPlayer?.subjectID
    ? myPlayer?.color
    : undefined;

  const isMySubject = newSubject || subject?.id === mySubject?.id;
  const isMyMainSubject = isMySubject && author?.subjectID === subject?.id;

  const newLightSpot = newSubject && !!myPlayer?.subjectID;

  const [s, set] = useStates({
    editMode: newSubject || newLightSpot,
    loading: false,
    color: subject?.color ?? firstNewSubjectColor,
    icon:
      subject?.icon ??
      faker.helpers.arrayElement(faker.helpers.objectValue(emojis)),
    opened: false,
    description: subject?.description ?? '',
  });

  const descriptionRef = useRef<Input.Element>(null);

  useEffect(() => {
    descriptionRef.current?.focus();
  }, []);

  useTipToast();

  const toast = useToast();

  const isCreatingMySubject = state === 'creating:subjects' && isMyTurn;
  const isCreatingLightSpot =
    state === 'creating:lightSpot' &&
    subState === 'create:subject' &&
    isMyLightSpotTurn;

  useEffect(() => {
    if (!subject) return;
    s.icon = subject.icon;
  }, [subject?.icon, s.editMode]);

  useEffect(() => {
    if (!subject) return;
    s.description = subject.description;
  }, [subject?.description, s.editMode]);

  useEffect(() => {
    if (!subject) return;
    s.color = subject.color;
  }, [subject?.color, s.editMode]);

  function handleSubmit() {
    if (isCreatingMySubject) {
      if (!s.icon || !s.description) return;

      s.loading = true;

      createMySubject({ icon: s.icon, description: s.description })
        .catch(toast.error)
        .finally(navigateToGame)
        .finally(set('loading', false));

      return;
    }

    if (isCreatingLightSpot) {
      if (!s.icon || !s.color || !s.description) return;

      s.loading = true;

      createLightSpotSubject({
        icon: s.icon,
        color: s.color,
        description: s.description,
      })
        .catch(toast.error)
        .finally(navigateToGame)
        .finally(set('loading', false));

      return;
    }

    if (!subject) return;

    s.loading = true;

    editSubject(subject.id, {
      icon: s.icon,
      description: s.description,
      color: s.color,
    })
      .catch(toast.error)
      .finally(set('editMode', false))
      .finally(set('loading', false));
  }

  const iconRef = useRef<HTMLButtonElement>(null);

  const iconSelectorReadonly = !isMySubject || !s.editMode;

  const descriptionInputDisabled = !s.editMode;

  const showCancelButton = !newSubject;

  const showColorSelector = (!isMyMainSubject || newLightSpot) && s.editMode;
  const colorSelectorDisabled = s.loading;

  const showEditButton = isMySubject && !s.editMode;

  const cancelDisabled = s.loading;
  const submitDisabled =
    !s.icon ||
    !s.description ||
    !s.color ||
    s.loading ||
    (s.icon === subject?.icon && s.description === subject.description);

  function renderLabel() {
    let children: ReactNode = null;

    if (isCreatingLightSpot)
      children = (
        <>
          <em className={s.color}>Seu</em> Elemento
        </>
      );
    else if (!subject?.id || subject.id === mySubject?.id)
      children = (
        <>
          <em className={s.color}>Seu</em> Elemento
        </>
      );
    else if (author)
      children = (
        <>
          Elemento de <em className={author.color}>{author.name}</em>
        </>
      );

    return children;
  }

  return (
    <BakingPaper
      onClick={() => {
        if (isCreatingMySubject) return;
        if (isCreatingLightSpot) return;

        navigateToGame();
      }}
    >
      <Content onClick={(e) => e.stopPropagation()}>
        <Ripple ref={iconRef}>
          <IconSelector icon={s.icon} $readOnly={iconSelectorReadonly} />
        </Ripple>
        <Popover anchorRef={iconRef} onToggle={set('opened')}>
          <PopoverContent>
            {Object.entries(emojis).map(([key, icons]) => (
              <Fragment key={key}>
                <PopoverSectionTitle>{key}</PopoverSectionTitle>

                <PopoverSection>
                  {icons.map((icon) => (
                    <IconOption key={icon} onClick={set('icon', icon)}>
                      {icon}
                    </IconOption>
                  ))}
                </PopoverSection>
              </Fragment>
            ))}
          </PopoverContent>
        </Popover>

        {showColorSelector && (
          <ColorSelector
            disabled={colorSelectorDisabled}
            defaultValue={s.color}
            onChange={set('color')}
          />
        )}

        <Input
          // style
          color={s.color}
          variant='baking-paper'
          label={renderLabel()}
          // params
          ref={descriptionRef}
          id='description'
          placeholder='Descreva...'
          disabled={descriptionInputDisabled}
          defaultValue={s.description}
          value={s.description}
          // handle
          onChange={set('description')}
        />
        {s.editMode && (
          <Buttons>
            {showCancelButton && (
              <Button
                disabled={cancelDisabled}
                onClick={set('editMode', false)}
              >
                Cancelar
              </Button>
            )}

            <Button
              color={s.color}
              loading={s.loading}
              disabled={submitDisabled}
              onClick={handleSubmit}
            >
              {newSubject ? 'Criar' : 'Editar'}
            </Button>
          </Buttons>
        )}

        {showEditButton && (
          <IconButton
            className='edit'
            icon={<Icon.Pencil />}
            size='small'
            onClick={set('editMode', true)}
          />
        )}
      </Content>
    </BakingPaper>
  );
};

export default SubjectPage;
